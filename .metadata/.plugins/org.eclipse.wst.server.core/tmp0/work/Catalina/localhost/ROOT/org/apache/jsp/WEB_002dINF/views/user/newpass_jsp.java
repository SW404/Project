/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.5
 * Generated at: 2022-05-19 01:21:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class newpass_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<script src=\"https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\n");
      out.write("<link href=\"/resources/css/passupdate.css\" rel=\"stylesheet\" >\n");
      out.write("<div id=\"page\">\n");
      out.write("<div class=\"container\">\n");
      out.write("   <h1>비밀번호재설정</h1>\n");
      out.write("   <form name=\"frm12\" method=\"post\" action=\"passUpdate\" enctype=\"multipart/form-data\">\n");
      out.write("      <table style=\"display: inline-block;\">\n");
      out.write("         <tr>\n");
      out.write("            <td class=\"title\" width=100>아이디</td>\n");
      out.write("            <td width=500>\n");
      out.write("               <input type=\"text\" name=\"uid\" class=\"uinput\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.uid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\n");
      out.write("            </td>\n");
      out.write("         </tr>\n");
      out.write("         <tr>\n");
      out.write("            <td class=\"title\" width=100>비밀번호</td>\n");
      out.write("            <td width=500>\n");
      out.write("               <input type=\"password\" name=\"upass\" id=\"upass\">\n");
      out.write("            </td>\n");
      out.write("         </tr>\n");
      out.write("            <tr>\n");
      out.write("            <td class=\"title\" width=100>비밀번호확인</td>\n");
      out.write("            <td width=500>\n");
      out.write("               <input type=\"password\" name=\"upasscheck\" id=\"upasscheck\">\n");
      out.write("            </td>\n");
      out.write("            <td><span id=\"passcheck\"></span></td>\n");
      out.write("         </tr>\n");
      out.write("      </table>\n");
      out.write("      <div style=\"text-align:center;margin-top:10px;\"class=\"update-button\">\n");
      out.write("         <button type=\"submit\">재발급</button>\n");
      out.write("         <button type=\"reset\">정보리셋</button>\n");
      out.write("      </div>\n");
      out.write("   </form>\n");
      out.write("   </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    var passcheck=false;\n");
      out.write("    var options = {\n");
      out.write("          min:7, max:14,\n");
      out.write("           special: true, // 특수문자 포함여부 (true일경우 반드시 포함하여야 함)\n");
      out.write("       }\n");
      out.write("    \n");
      out.write("    function passwordValidator(args, opt) {\n");
      out.write("        // v1.0\n");
      out.write("        var obj = opt || {   // options의 기본 값들입니다. \n");
      out.write("            min: 7, max: 14, conseq: 5, special: true,\n");
      out.write("            msg: '숫자와 영문자,특수문자 조합으로 9~16자리를 사용해야 합니다.',\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        var specialChar = opt.special ? '(?=.*[!@#$%^*+=-])' : '';\n");
      out.write("        var rules = new RegExp(\"^(?=.*[a-zA-Z])\"+specialChar+\n");
      out.write("        \"(?=.*[0-9]).{\" + obj.min + \",\" + obj.max + \"}$\");\n");
      out.write("        if (!rules.test(args)) {\n");
      out.write("            console.log(opt.msg);\n");
      out.write("            return false;\n");
      out.write("        }\n");
      out.write("        return true;\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("   $(\"#upasscheck\").on(\"blur\", function(){\n");
      out.write("       var upass=$(frm12.upass).val();\n");
      out.write("       var upasscheck = $(frm12.upasscheck).val();\n");
      out.write("       \n");
      out.write("       if(upass!=upasscheck){\n");
      out.write("          $(\"#passcheck\").html(\"비밀번호가 일치하지 않습니다.\");\n");
      out.write("          return;\n");
      out.write("       }else if(upass.length<7||upass.length>15){\n");
      out.write("          $(\"#passcheck\").html(\"비밀번호는 7자 이상 14자 이하로 입력해주세요.\");\n");
      out.write("          return\n");
      out.write("       }else if(passwordValidator(upass,options)==false) {\n");
      out.write("          $(\"#passcheck\").html(\"숫자와 영문자,특수문자 조합으로 입력해야 합니다\");\n");
      out.write("          return;\n");
      out.write("       }\n");
      out.write("       else {\n");
      out.write("          $(\"#passcheck\").html(\"\");\n");
      out.write("         passcheck=true;\n");
      out.write("       }\n");
      out.write("   });\n");
      out.write("   \n");
      out.write("   $(frm12).on(\"submit\",function(e){\n");
      out.write("      e.preventDefault();\n");
      out.write("      \n");
      out.write("      var uid=$(frm12.uid).val();\n");
      out.write("      var upass=$(frm12.upass).val();\n");
      out.write("      var upasscheck = $(frm12.upasscheck).val();\n");
      out.write("      if(passcheck=false){\n");
      out.write("         alert(\"비밀번호가 일치하지 않습니다.\");\n");
      out.write("         return;\n");
      out.write("      }\n");
      out.write("      \n");
      out.write("      alert(uid+\"\\n\"+upass);\n");
      out.write("      \n");
      out.write("   \n");
      out.write("         if(!confirm(\"비밀번호를 재설정하시겟습니까?\")) return;\n");
      out.write("         \n");
      out.write("         frm12.submit();\n");
      out.write("      });\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
